{"version":3,"file":"view.js","mappings":";;;;AAAAA,QAAQ,CAACC,gBAAgB,CAAC,kBAAkB,EAAE,YAAY;EACzDD,QAAQ,CAACE,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,gCAAgC,CAAC;EAE7D,MAAMC,OAAO,GAAGL,QAAQ,CAACM,gBAAgB,CAAC,uCAAuC,CAAC;EAElFD,OAAO,CAACE,OAAO,CAACC,MAAM,IAAI;IACzB,MAAMC,MAAM,GAAGD,MAAM,CAACE,OAAO,CAAC,gBAAgB,CAAC;IAC/C,MAAMC,OAAO,GAAGF,MAAM,CAACG,YAAY,CAAC,eAAe,CAAC;IACpD,MAAMC,QAAQ,GAAGJ,MAAM,CAACG,YAAY,CAAC,gBAAgB,CAAC;IACtD,MAAME,OAAO,GAAGL,MAAM,CAACG,YAAY,CAAC,eAAe,CAAC;IACpD,MAAMG,QAAQ,GAAGN,MAAM,CAACG,YAAY,CAAC,gBAAgB,CAAC;IACtD,MAAMI,WAAW,GAAGP,MAAM,CAACG,YAAY,CAAC,mBAAmB,CAAC,IAAI,OAAO;IACvE,MAAMK,YAAY,GAAGR,MAAM,CAACG,YAAY,CAAC,oBAAoB,CAAC,IAAI,KAAK;IAEvE,MAAMM,MAAM,GAAGT,MAAM,CAACU,aAAa,CAAC,SAAS,CAAC;IAE9C,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;MAC9B,IAAIZ,MAAM,CAACa,OAAO,EAAE;QACnBH,MAAM,CAACI,KAAK,CAACC,eAAe,GAAGT,OAAO;QACtCd,QAAQ,CAACM,gBAAgB,CAAC,IAAIK,OAAO,EAAE,CAAC,CAACJ,OAAO,CAACiB,OAAO,IAAI;UAC3DA,OAAO,CAACF,KAAK,CAACG,OAAO,GAAGT,WAAW;QACpC,CAAC,CAAC;QACFhB,QAAQ,CAACM,gBAAgB,CAAC,IAAIO,QAAQ,EAAE,CAAC,CAACN,OAAO,CAACiB,OAAO,IAAI;UAC5DA,OAAO,CAACF,KAAK,CAACG,OAAO,GAAG,MAAM;QAC/B,CAAC,CAAC;MACH,CAAC,MAAM;QACNP,MAAM,CAACI,KAAK,CAACC,eAAe,GAAGR,QAAQ;QACvCf,QAAQ,CAACM,gBAAgB,CAAC,IAAIK,OAAO,EAAE,CAAC,CAACJ,OAAO,CAACiB,OAAO,IAAI;UAC3DA,OAAO,CAACF,KAAK,CAACG,OAAO,GAAG,MAAM;QAC/B,CAAC,CAAC;QACFzB,QAAQ,CAACM,gBAAgB,CAAC,IAAIO,QAAQ,EAAE,CAAC,CAACN,OAAO,CAACiB,OAAO,IAAI;UAC5DA,OAAO,CAACF,KAAK,CAACG,OAAO,GAAGT,WAAW;QACpC,CAAC,CAAC;MACH;IACD,CAAC;;IAED;IACA,IAAIC,YAAY,KAAK,IAAI,EAAE;MAC1BT,MAAM,CAACa,OAAO,GAAG,IAAI;IACtB;IACAD,gBAAgB,CAAC,CAAC;;IAElB;IACAZ,MAAM,CAACP,gBAAgB,CAAC,QAAQ,EAAEmB,gBAAgB,CAAC;EACpD,CAAC,CAAC;AACH,CAAC,CAAC,C","sources":["webpack://slider-toggle-anything/./src/view.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\n\tdocument.body.classList.add('npagz-slider-toggle-js-enabled');\n\n\tconst toggles = document.querySelectorAll('.slider-toggle input[type=\"checkbox\"]');\n\t\n\ttoggles.forEach(toggle => {\n\t\tconst parent = toggle.closest('.slider-toggle');\n\t\tconst onClass = parent.getAttribute('data-on-class');\n\t\tconst offClass = parent.getAttribute('data-off-class');\n\t\tconst onColor = parent.getAttribute('data-on-color');\n\t\tconst offColor = parent.getAttribute('data-off-color');\n\t\tconst displayType = parent.getAttribute('data-display-type') || 'block';\n\t\tconst defaultState = parent.getAttribute('data-default-state') || 'off';\n\n\t\tconst slider = parent.querySelector('.slider');\n\t\t\n\t\tconst updateVisibility = () => {\n\t\t\tif (toggle.checked) {\n\t\t\t\tslider.style.backgroundColor = onColor;\n\t\t\t\tdocument.querySelectorAll(`.${onClass}`).forEach(element => {\n\t\t\t\t\telement.style.display = displayType;\n\t\t\t\t});\n\t\t\t\tdocument.querySelectorAll(`.${offClass}`).forEach(element => {\n\t\t\t\t\telement.style.display = 'none';\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tslider.style.backgroundColor = offColor;\n\t\t\t\tdocument.querySelectorAll(`.${onClass}`).forEach(element => {\n\t\t\t\t\telement.style.display = 'none';\n\t\t\t\t});\n\t\t\t\tdocument.querySelectorAll(`.${offClass}`).forEach(element => {\n\t\t\t\t\telement.style.display = displayType;\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\n\t\t// Set initial visibility based on the default state\n\t\tif (defaultState === 'on') {\n\t\t\ttoggle.checked = true;\n\t\t}\n\t\tupdateVisibility();\n\n\t\t// Add event listener for changes\n\t\ttoggle.addEventListener('change', updateVisibility);\n\t});\n});\n"],"names":["document","addEventListener","body","classList","add","toggles","querySelectorAll","forEach","toggle","parent","closest","onClass","getAttribute","offClass","onColor","offColor","displayType","defaultState","slider","querySelector","updateVisibility","checked","style","backgroundColor","element","display"],"sourceRoot":""}